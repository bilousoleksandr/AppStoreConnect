{# A template to generate randomizable init #}

{% for type in types.structs where type|annotated:"Randomizable" %}
{% set spacing %}{% if type.parentName %}    {% endif %}{% endset %}
{% map type.storedVariables into parameters using var %}{{ var.name }}: {{ var.typeName }}{% if var.defaultValue %} = {{var.defaultValue}}{% elif var.typeName.isOptional %} = nil{% endif %}{% endmap %}
extension {{ type.name }} { 
// sourcery:inline:auto:{{ type.name }}.Randomizable
{{spacing}}    {{ type.accessLevel }} random({{ parameters|join:" = .random(), " }} = .random()) {
{{spacing}}        {% for variable in type.storedVariables %}
{{spacing}}        self.{{ variable.name }} = {{ variable.name }}
{{spacing}}        {% endfor %}
{{spacing}}    }
}
// sourcery:end
{% endfor %}